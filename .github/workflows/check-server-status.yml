name: Check Server Status
on:
  schedule:
    - cron: '*/5 * * * *'  # Проверка каждые 5 минут
  workflow_dispatch:

jobs:
  check-servers:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y netcat jq
      
      - name: Check server status
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
        run: |
          # Получаем список серверов
          servers=$(curl -s -X GET \
            "$SUPABASE_URL/rest/v1/hosted_servers?select=id,ip,port" \
            -H "apikey: $SUPABASE_KEY" \
            -H "Authorization: Bearer $SUPABASE_KEY")
          
          # Обработка серверов через base64 для безопасности
          echo "$servers" | jq -r '.[] | @base64' | while read -r row; do
            data=$(echo "$row" | base64 --decode)
            id=$(echo "$data" | jq -r '.id')
            ip=$(echo "$data" | jq -r '.ip')
            port=$(echo "$data" | jq -r '.port')
            
            # Проверка доступности сервера
            if nc -z -w 2 "$ip" "$port"; then
              status="Online"
            else
              status="Offline"
            fi
            
            # Обновление статуса в Supabase
            curl -s -X PATCH \
              "$SUPABASE_URL/rest/v1/hosted_servers?id=eq.$id" \
              -H "apikey: $SUPABASE_KEY" \
              -H "Authorization: Bearer $SUPABASE_KEY" \
              -H "Content-Type: application/json" \
              -d "{
                \"server_status\": \"$status\",
                \"last_updated\": \"$(date -u +'%Y-%m-%dT%H:%M:%SZ')\"
              }"
            
            echo "Updated server $id: $status"
          done
